So below, that is an embedded flash card thing.

@>
@g Numerical Analysis, hello, math, shuxue
@t 2018-10-10@14:31 @m sm2: { 2.70, 3 }

@f Preconditioning @> ONE_LINE
@b Basically wants to multiply an equation to make the matrices look more like
   the Identity matrix. This tries to save future computation.

   Preconditioning is for GMres.

@r hello @r you need @r to go @r away


@f Jacobi Preconditioning
@b who doesn't do something like this.
   Does [Preconditioning] by using the diagonal matrix.
@n You know who. GHOST BUSTERS!
@< this specific text here means nothing at all.

Can the delim start anywhere on the line? That is a question I have asked
multiple times. If it can, then you can stack things on the same line. Then it
really comes down to the question of the meta data. Should the meta data by
default be on its own line?

And can meta data be for a group?
   If meta data can be owned by a group, then everything in that group is reviewed
   at the same time, and all the individual meta data's are ignored/deleted for
   individual cards.

Ok, delimiters can be on the same line, but the parser will overwrite this by
default. You can pass a parameter at the "@>" delimiter spot. I gotta figure
out what these delimiters look like.

All these are formatting options for what happens when the file is written.
I gotta go over these a bit probably.

*@> META_NEWLINE -> Put a newline before each new meta created. (Default)
_@> META_INPLACE -> Don't put a newline before newly created metas.
_@> META_DISABLE -> Don't create any new metas. (But can touch)
_@> META_IGNORE  -> Don't touch any metas (UMM, I don't want this one I think).

*@> DELIM_NEWLINE -> Each thing in the card goes on a new line.
_@> DELIM_ONELINE -> Compactify each card to only be one line.
_@> DELIM_IGNORE  -> Don't mess with the concards format at all.

*@> CARDS_SPACED  -> Put 2 newlines in between each card. For prettiness.
_@> CARDS_NEWLINE -> Put a newline in between each card.
_@> CARDS_SPACE   -> Just put a space after each card. Don't
_@> CARDS_IGNORE  -> Don't mess with what is in between each card at all.

*@> CONTENT_IGNORE  -> Don't touch the content of the card.
_@> CONTENT_ONELINE -> Turns all the content of a thing into a single line.
                       WARNING, [formatting] data could be lost with this option.
                      Make the output format really pretty.
                      Each card has a blank line in between.
                      Each delimiter has a newline after it.
*@> DELIM_NICE     -> This does not effect the content of a card in any way.

_@> READONLY = META_IGNORE & DELIM_IGNORE & CONTENT_IGNORE
_@> PRETTIFY = CARDS_SPACED & DELIM_NEWLINE & META_NEWLINE

Okay, let's force everything on it's own line, This means that one cannot have
whitespace before the cards. But whyshenme!!!? :(. The only way to fix this is
to not have meta data stored in the note file. If I do this, then there has to
be a way to make the meta data portable. This really can't be done though.

Can the starting/format delimiter be contained within the actual concard space?
No. Firstly not within a card, because that presents problems. Secondly just no
anywhere, because if it can't be within a card, then it doesn't even make
sense.

-------- DEPRECATED IDEA --------
Is it really necessarry to have longer abreviations? No! Don't do it!
@g     @r      @f     @b    @n    @m
@grp   @rmd    @frt   @bck  @not  @met
@group @remind @front @back @note @meta
--------       END       --------

links will go by [] (Probably... This is more of a gui thing.)

lua scripting for algorithms? That would be really cool actually. Or JS for
algorithms. (if it is in the browser).

Yeah, Lua scripting, but I'm not assuming the website. Maybe if a browser just
starts up, then that is good enough. Then that can be built off of in the
future. Even the things .... ?

So how will it look like in LUA for the creation of new algorithms? Either just
have global functions, or add the function to an array. Yeah... just global
functions is fine.

Are the default algorithms built into Go? That is another good question.

Pros: If the file is deleted, the program still works, Makes it easier for
people to use the program.

Cons: Kind of enforces a limitation

Or what if we just copy a Lua file to the correct location. No, there should be
a default location. There should be a default algorithm. I can copy the anki
algorithm.

Also, should there be a way to say, "I know this card".
Well, that could be just a "I know this" algorithm. Or just change the date to
some arbitrary time in the future. Actually, you never "know" something. You
should just move the date to 10 years from then. Nevermind, there could just be
a "known" algorithm.

I just have to assume that the "streak" and "next day to review" are not global
to every algorithm.

I will have to provide some API things for lua. Including date manipulation.
That will be important. Yeah, the Lua needs to have the current date. Dates are
just strings.

So the lua API includes string and math modules plus this date one:
```lua
-- if any of these have an error, then null is returned.
-- a "date" is just a string with a date and a time.
-- Returns the current date.
function date.today() end

-- if anything is larger than what it should be, then that adds to the date.
function date.create(year, month, day, hour, min) end

-- this returns all values as a table
-- { year=2018, month=6, day=16, hour=6, min=41 }
function date.parse() end

```

And a function would look like this:

function sm2(params, card)

end

There should
